#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "hold-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        mt_ballanced: mt_ballanced {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_BALLANCED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt_ballanced LEFT_CONTROL RIGHT_BRACKET  &kp Q  &kp W                         &kp E                     &kp R                       &kp T          &kp Y          &kp U                        &kp I                      &kp O                          &kp P     &mt_ballanced RIGHT_CONTROL LBKT
&mt LEFT_ALT TAB                          &kp A  &mt_ballanced LEFT_CONTROL S  &mt_ballanced LEFT_ALT D  &mt_ballanced LEFT_GUI F    &kp G          &kp H          &mt_ballanced RIGHT_GUI J    &mt_ballanced RIGHT_ALT K  &mt_ballanced RIGHT_CONTROL L  &kp SEMI  &mt RIGHT_ALT SQT
&mt LEFT_SHIFT MINUS                      &kp Z  &kp X                         &kp C                     &mt_ballanced LEFT_SHIFT V  &kp B          &kp N          &mt_ballanced RIGHT_SHIFT M  &kp COMMA                  &kp DOT                        &kp FSLH  &mt RIGHT_SHIFT BSLH
                                                                               &lt RSE ESC               &mt LEFT_GUI TAB            &lt LWR SPACE  &lt LWR ENTER  &mt RIGHT_GUI BSPC           &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LEFT_CONTROL F1  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &mt RIGHT_CONTROL F12
&mt LEFT_GUI PLUS    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RIGHT_GUI EQUAL
&mt LALT MINUS       &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RALT
                                       &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LEFT_CONTROL GRAVE  &none  &none             &none         &none           &none   &kp H           &kp Y           &kp N         &kp U            &none     &mt RIGHT_CONTROL CAPSLOCK
&kp LEFT_ALT            &none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI    &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp UP    &mt RIGHT_ALT K_APP
&kp LEFT_SHIFT          &none  &none             &none         &kp LEFT_SHIFT  &none   &none           &none           &none         &kp LEFT         &kp DOWN  &mt RIGHT_SHIFT RIGHT
                                                 &trans        &trans          &trans  &trans          &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
